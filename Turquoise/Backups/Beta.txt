local EAX
local ALX
local MSG = print
local JXm = [[
anything is a comment.

EXP << ? |2| {2} // 2 ^ 2
MUL << ? |54| {23} // 54*23
REP << {'abc'} |EAX| // EAX = 'abc'
REP << {'This'} // print 'This'
REPR << ? {'EAX'} // print(EAX)
MUL << ? |2| {2} // 2*2
ADD << ? |2| {1} //2 + 1
REP << {'Hello, World!'} // print 'Hello, World!'
]]
local xyz = "hi"

str = JXm
lines = {}
-- Compile
for s in str:gmatch("[^\r\n]+") do
    table.insert(lines, s)
end

function sL(name, val)
    local index = 1
    while true do
        local var_name, var_value = debug.getlocal(2, index)
        if not var_name then break end
        if var_name == name then 
            debug.setlocal(2, index, val)
        end
        index = index + 1
    end
end

function gL(name)
    local index = 1
    while true do
        local var_name, var_value = debug.getlocal(2, index)
        if not var_name then break end
        if var_name == name then 
            return var_value
        end
        index = index + 1
    end
end
--local variable = "2s"
--print(debug.getupvalue(function() variable() end, 1))
--==>
for i, v in pairs(lines) do
    if v:find("REP << ") then
        if v:match("%|(.+)%|") == nil then
        print("REP: ", v:match("%{'(.+)%'}"))
        else
            sL(v:match("%|(.+)%|"), v:match("%{'(.+)%'}"))
        end
    elseif v:find("REPR << ? ") then
        print("REPR: ", gL(v:match("%{'(.+)%'}")))
    elseif v:find("COMP << ") then
        print("REPR: ", gL(v:match("%{'(.+)%'}")))
    elseif v:find("SUB << ? ") then 
        print(tonumber(v:match("%|(.+)%|") - tonumber(v:match("%{(.+)%}"))))
    elseif v:find("MUL << ? ") then 
        print(tonumber(v:match("%|(.+)%|") * tonumber(v:match("%{(.+)%}"))))
    elseif v:find("ADD << ? ") then 
        print(tonumber(v:match("%|(.+)%|") + tonumber(v:match("%{(.+)%}"))))
    elseif v:find("DIV << ? ") then 
        print(tonumber(v:match("%|(.+)%|") / tonumber(v:match("%{(.+)%}"))))
    elseif v:find("EXP << ? ") then 
        print(tonumber(v:match("%|(.+)%|") ^ tonumber(v:match("%{(.+)%}"))))
    end
end
